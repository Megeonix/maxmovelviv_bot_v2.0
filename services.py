import requests
from config import ORS_API_KEY, ADMIN_CHAT_IDS

# --- –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥—Å—Ç–∞–Ω—å —á–µ—Ä–µ–∑ OpenRouteService ---
def get_distance_km(start, end) -> float:
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î –≤—ñ–¥—Å—Ç–∞–Ω—å —É –∫–º –º—ñ–∂ –¥–≤–æ–º–∞ —Ç–æ—á–∫–∞–º–∏ —á–µ—Ä–µ–∑ ORS directions API.
    start, end: (lat, lon)
    """
    url = "https://api.openrouteservice.org/v2/directions/driving-car"
    headers = {"Authorization": ORS_API_KEY, "Content-Type": "application/json"}
    body = {
        "coordinates": [
            [start[1], start[0]],
            [end[1], end[0]]
        ]
    }
    try:
        response = requests.post(url, json=body, headers=headers, timeout=15)
        response.raise_for_status()
        data = response.json()
        dist_m = data['features'][0]['properties']['segments'][0]['distance']
        return dist_m / 1000
    except Exception as e:
        print("Error getting distance:", e)
        return 0

# --- –ì–µ–æ–∫–æ–¥—É–≤–∞–Ω–Ω—è (–æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–∑–≤—É –ª–æ–∫–∞—Ü—ñ—ó –∑–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ —á–µ—Ä–µ–∑ ORS) ---
async def geocode_coords(coords):
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ –∞–¥—Ä–µ—Å–æ—é –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (lat, lon)
    """
    try:
        url = f"https://api.openrouteservice.org/geocode/reverse"
        params = {
            "api_key": ORS_API_KEY,
            "point.lat": coords[0],
            "point.lon": coords[1],
            "size": 1
        }
        response = requests.get(url, params=params, timeout=10)
        response.raise_for_status()
        data = response.json()
        if data["features"]:
            return data["features"][0]["properties"].get("label", "–õ–æ–∫–∞—Ü—ñ—è")
        else:
            return "–õ–æ–∫–∞—Ü—ñ—è"
    except Exception as e:
        print("Error geocoding coords:", e)
        return "–õ–æ–∫–∞—Ü—ñ—è"

# --- –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞—è–≤–∫—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º ---
from config import ADMIN_CHAT_IDS

async def send_admins_order(bot, data, location_name):
    """
    –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∞–¥–º—ñ–Ω—É –∑–∞—è–≤–∫–∏ –∑ —É—Å—ñ–º–∞ –¥–µ—Ç–∞–ª—è–º–∏.
    """
    # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏ –∑ data
    text = (
        f"üìù <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞</b>\n"
        f"–ö–ª—ñ—î–Ω—Ç: {data.get('full_name') or '‚Äî'}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone') or '‚Äî'}\n"
        f"–ü–æ—Å–ª—É–≥–∞: {data.get('service') or '‚Äî'}\n"
        f"–¢–∏–ø –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è: {data.get('transfer_type') or '‚Äî'}\n"
        f"–¢–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É: {data.get('transport_type') or '‚Äî'}\n"
        f"–ó –ª–æ–∫–∞—Ü—ñ—ó: {location_name or data.get('from_location')}\n"
        f"–í –ª–æ–∫–∞—Ü—ñ—é: {data.get('to_location') or '‚Äî'}\n"
        f"–¢–∏–ø –≤–∞–Ω—Ç–∞–∂–Ω–∏—Ö —Ä–æ–±—ñ—Ç: {data.get('cargo_work_type') or '‚Äî'}\n"
        f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω: {data.get('hours') or '‚Äî'}\n"
        f"–û–ø–∏—Å: {data.get('description') or '‚Äî'}\n"
        f"–í–∞—Ä—Ç—ñ—Å—Ç—å: {data.get('price') or '‚Äî'} –≥—Ä–Ω\n"
    )
    for admin_id in ADMIN_CHAT_IDS:
        try:
            await bot.send_message(admin_id, text)
        except Exception as e:
            print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∞–¥–º—ñ–Ω—É {admin_id}: {e}")
